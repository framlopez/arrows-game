{"version":3,"sources":["components/Aplication/context.js","components/PageTitle/index.js","components/TimerClock/index.js","components/ActionButton/index.js","components/ActionsBar/index.js","components/Game/index.js","components/Onboarding/index.js","components/ScoreTable/index.js","components/CardWrapper/index.js","components/ScoreModal/index.js","components/ScoreCards/index.js","components/Aplication/index.js","index.js"],"names":["initialState","initialGameStatus","ready","run","initialGameScore","successCount","errorCount","allCount","points","initialGameTimer","Context","React","createContext","Title","Typography","PageTitle","className","PureComponent","TimerClock","this","context","timer","stopTimer","status","inputReadOnly","value","moment","size","contextType","ActionButton","props","type","disabled","onClickHandler","iconType","text","buttonProps","onClick","ActionsBar","resetTimer","class","Game","randomOption","bind","doneProccess","errorProccess","doneProccessKeyDown","errorProccessKeyDown","successPoint","errorPoint","options","id","icon","state","listItems","keyDownSuccess","isKeyDown","lastId","startTimer","firstItemId","score","randomNumber","Math","floor","random","length","updateScore","setState","defaultStatusClassName","style","left","map","item","key","statusClassName","src","alt","Onboarding","onCancelHandler","onOkHandler","toggleShowAgainChecbox","visible","showAgain","setCookie","cookie","load","save","modalProps","title","okText","centered","closable","onOk","onCancel","content","width","checked","onChange","columns","dataIndex","align","render","color","symbol","ScoreTable","data","id1","id2","id3","bordered","dataSource","pagination","GameScoreCard","onResetGame","onShareGame","window","open","cancelText","ScoreCards","Aplication","document","addEventListener","event","which","clearInterval","setInterval","contextValue","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.177532cf.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const initialState = {\n  initialGameStatus: {\n    ready: true,\n    run: false,\n  },\n  initialGameScore: {\n    successCount: 0,\n    errorCount: 0,\n    allCount: 0,\n    points: 0,\n  },\n  initialGameTimer: 10,\n};\n\nexport const Context = React.createContext(\n  initialState,\n);","import React, { PureComponent } from \"react\";\nimport { Typography } from 'antd';\n\nimport './index.css';\n\nconst { Title } = Typography;\n\nexport default class PageTitle extends PureComponent {\n  render() {\n    return (\n      <Title className=\"page-title\">Arrows Game</Title>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Context } from \"../Aplication/context\";\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\n\nexport default class TimerClock extends PureComponent {\n  static contextType = Context;\n\n  componentDidUpdate() {\n    const { timer, stopTimer, status } = this.context;\n\n    if (timer === 0 && status.run) {\n      stopTimer();\n    }\n  }\n\n  render() {\n    const { timer } = this.context;\n\n    return (\n      <div className=\"app-time-clock\">\n        <TimePicker inputReadOnly={true} value={moment(timer, 'ss')} size=\"large\" />\n        <div className=\"app-time-clock-mask\" />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Button, Icon } from 'antd';\n\nexport default class ActionButton extends PureComponent {\n  render() {\n    const { type, disabled, size, onClickHandler, iconType, text } = this.props;\n    const buttonProps = {\n      type,\n      disabled,\n      size,\n      onClick: onClickHandler,\n    };\n    return (\n      <Button {...buttonProps}>\n        <Icon type={iconType} />\n        {text}\n      </Button>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Context } from \"../Aplication/context\";\nimport TimerClock from \"../TimerClock\";\nimport ActionButton from \"../ActionButton\";\n\nimport './index.css';\n\nexport default class ActionsBar extends PureComponent {\n  static contextType = Context;\n  render() {\n    const { status, resetTimer } = this.context;\n    return (\n      <div className=\"actions-bar\">\n        <div class=\"actions-bar__left\">\n          <TimerClock />\n        </div>\n        <div class=\"actions-bar__right\">\n          <ActionButton type=\"danger\" disabled={!status.run && status.ready} size=\"large\" onClickHandler={resetTimer} iconType=\"reload\" text=\"Reiniciar\" />\n          {/* <ActionButton type=\"default\" size=\"large\" onClickHandler={() => { console.log('share action'); }} iconType=\"share-alt\" text=\"Compartir\" /> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Context } from \"../Aplication/context\";\n\nimport './index.css';\n\nexport default class Game extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.randomOption = this.randomOption.bind(this);\n    this.doneProccess = this.doneProccess.bind(this);\n    this.errorProccess = this.errorProccess.bind(this);\n    this.doneProccessKeyDown = this.doneProccessKeyDown.bind(this);\n    this.errorProccessKeyDown = this.errorProccessKeyDown.bind(this);\n    this.successPoint = 1;\n    this.errorPoint = -2;\n    this.options = [\n      {\n        id: 'bottom',\n        icon: 'https://framlopez.github.io/arrows-game/down-arrow-key.png',\n      },\n      {\n        id: 'top',\n        icon: 'https://framlopez.github.io/arrows-game/up-arrow-key.png',\n      },\n      {\n        id: 'left',\n        icon: 'https://framlopez.github.io/arrows-game/left-arrow-key.png',\n      },\n      {\n        id: 'right',\n        icon: 'https://framlopez.github.io/arrows-game/right-arrow-key.png',\n      }\n    ];\n    this.state = {\n      listItems: [\n        this.randomOption(),\n        this.randomOption(),\n        this.randomOption(),\n        this.randomOption(),\n        this.randomOption(),\n        this.randomOption(),\n      ],\n      keyDownSuccess: null,\n    };\n  }\n\n  static contextType = Context;\n\n  componentDidUpdate() {\n    const { listItems } = this.state;\n    const { status, isKeyDown, lastId, startTimer, score } = this.context;\n    const firstItemId = listItems[score.successCount].id;\n\n    if (lastId === null || !status.ready) return null;\n    if (!status.run) startTimer();\n\n    if (firstItemId === lastId) {\n      if (isKeyDown) {\n        this.doneProccessKeyDown();\n      } else {\n        this.doneProccess();\n      }\n    } else {\n      if (isKeyDown) {\n        this.errorProccessKeyDown();\n      } else {\n        this.errorProccess();\n      }\n    }\n  }\n\n  randomOption() {\n    const randomNumber = Math.floor(Math.random() * this.options.length);\n    return this.options[randomNumber];\n  }\n\n  doneProccess() {\n    const { listItems } = this.state;\n    const { updateScore, score } = this.context;\n    this.setState({\n      listItems: [\n        ...listItems,\n        this.randomOption(),\n      ],\n      keyDownSuccess: null,\n    });\n    updateScore({\n      ...score,\n      points: score.points + this.successPoint,\n      successCount: score.successCount + 1,\n    });\n  }\n\n  errorProccess() {\n    const { updateScore, score } = this.context;\n    this.setState({\n      keyDownSuccess: null,\n    });\n    updateScore({\n      ...score,\n      points: score.points + this.errorPoint,\n      errorCount: score.errorCount + 1,\n    });\n  }\n\n  doneProccessKeyDown() {\n    this.setState({\n      keyDownSuccess: true,\n    });\n  }\n\n  errorProccessKeyDown() {\n    this.setState({\n      keyDownSuccess: false,\n    });\n  }\n  \n  render() {\n    const { listItems, keyDownSuccess } = this.state;\n    const { isKeyDown, status, score } = this.context;\n    const defaultClassName = 'arrow-key';\n    const defaultStatusClassName = keyDownSuccess ? `${defaultClassName}--success` : `${defaultClassName}--error`;\n    return (\n      <div className=\"game\">\n        <div className=\"game__container\" style={{ left: `${score.successCount * -100}px` }}>\n          {listItems.map((item, key) => {\n            const statusClassName = (key === score.successCount && isKeyDown && status.run) && defaultStatusClassName;\n            return <img className={`${defaultClassName} ${statusClassName}`} src={item.icon} alt=\"\" />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, Fragment } from \"react\";\nimport { Modal, Checkbox } from 'antd';\nimport cookie from 'react-cookies';\n\nexport default class Onboarding extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onCancelHandler = this.onCancelHandler.bind(this);\n    this.onOkHandler = this.onOkHandler.bind(this);\n    this.toggleShowAgainChecbox = this.toggleShowAgainChecbox.bind(this);\n    this.state = {\n      visible: true,\n      showAgain: true,\n      setCookie: cookie.load('onboarding'),\n    };\n  }\n\n  onCancelHandler() {\n    this.setState({\n      visible: false,\n    });\n  }\n\n  onOkHandler() {\n    const { showAgain } = this.state;\n    this.onCancelHandler();\n    if(!showAgain) {\n      cookie.save('onboarding', true);\n    }\n  }\n\n  toggleShowAgainChecbox() {\n    this.setState(state => ({\n      showAgain: !state.showAgain,\n    }));\n  }\n\n  get content() {\n    const { showAgain } = this.state;\n    return (\n      <Fragment>\n        <p>Para comenzar a jugar, tentrás que utlizar el teclado.</p>\n        <img src=\"https://framlopez.github.io/arrows-game/arrows-keyboard-onboarding.png\" alt=\"\" width=\"100%\" />\n        <Checkbox checked={!showAgain} onChange={this.toggleShowAgainChecbox}>No volver a mostrar este mensaje</Checkbox>\n      </Fragment>\n    );\n  }\n  \n  render() {\n    const { visible, setCookie } = this.state;\n    const modalProps = {\n      className: 'app-onboarding',\n      title: 'Bienvenid@ a arrow game',\n      okText: 'Comenzar',\n      visible: visible && !setCookie,\n      centered: true,\n      closable: false,\n      onOk: this.onOkHandler,\n      onCancel: this.onCancelHandler,\n    };\n    return (\n      <Modal {...modalProps}>\n        {this.content}\n      </Modal>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Table, Tag } from 'antd';\nimport { Context } from \"../Aplication/context\";\n\nconst columns = [\n  {\n    title: 'Motivo',\n    dataIndex: 'id1',\n    key: 'id1',\n  },\n  {\n    title: 'Cantidad',\n    dataIndex: 'id2',\n    key: 'id2',\n    align: 'right',\n  },\n  {\n    title: 'Puntos',\n    dataIndex: 'id3',\n    key: 'id3',\n    render: (points) => {\n      let color = 'geekblue';\n      let symbol = ' ';\n      \n      if (points < 0) {\n        color = 'volcano';\n        symbol = '';\n      } else if (points > 0) {\n        color = 'green';\n        symbol = '+';\n      }\n      return (\n        <span>\n          <Tag color={color}>\n            {`${symbol}${points}`}\n          </Tag>\n        </span>\n      );\n    },\n  },\n];\n\nexport default class ScoreTable extends PureComponent {\n  static contextType = Context;\n  render() {\n    const { score } = this.context;\n    const data = [\n      // {\n      //   key: '1',\n      //   name: 'Movimientos',\n      //   points: score.allCount,\n      //   tags: [],\n      // },\n      {\n        key: '1',\n        id1: 'Movimientos acertados',\n        id2: score.successCount,\n        id3: score.successCount * 1,\n      },\n      {\n        key: '2',\n        id1: 'Movimientos fallidos',\n        id2: score.errorCount,\n        id3: score.errorCount * -2,\n      },\n      // {\n      //   key: '4',\n      //   name: 'Calificación',\n      //   points: score.points,\n      //   tags: [],\n      // },\n    ];\n    return (\n      <Table bordered columns={columns} dataSource={data} pagination={false} size=\"small\" />\n    );\n  }\n}\n","import React, { PureComponent, Fragment } from \"react\";\nimport { Card, Typography, Icon } from 'antd';\nimport { Context } from \"../Aplication/context\";\n\nconst { Title } = Typography;\n\nexport default class GameScoreCard extends PureComponent {\n  static contextType = Context;\n\n  get title() {\n    const { title, iconType } = this.props;\n    return (\n      <Fragment>\n        <Icon type={iconType} />\n        {` ${title}`}\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { text } = this.props;\n    return (\n      <Card title={this.title}>\n        <Title>{text}</Title>\n      </Card>\n    );\n  }\n}\n","import React, { PureComponent, Fragment } from \"react\";\nimport { Modal } from 'antd';\nimport { Context } from \"../Aplication/context\";\nimport ScoreTable from \"../ScoreTable\";\nimport CardWrapper from \"../CardWrapper\";\n\nexport default class Onboarding extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onResetGame = this.onResetGame.bind(this);\n    this.onShareGame = this.onShareGame.bind(this);\n  }\n  \n  static contextType = Context;\n\n  onResetGame() {\n    const { resetTimer } = this.context;\n    resetTimer();\n  }\n\n  onShareGame() {\n    const { score } = this.context;\n    window.open(`https://twitter.com/intent/tweet?text=Este es mi último score: ${score.points}`);\n  }\n\n  get content() {\n    const { score } = this.context;\n    return (\n      <Fragment>\n        <CardWrapper title=\"Puntaje partida\" iconType=\"caret-right\" text={score.points} />\n        <ScoreTable />\n      </Fragment>\n    );\n  }\n  \n  render() {\n    const { visible } = this.props;\n    const modalProps = {\n      title: 'Resultados',\n      okText: 'Compartir',\n      cancelText: 'Volver a jugar',\n      visible: visible,\n      centered: true,\n      closable: false,\n      onOk: this.onShareGame,\n      onCancel: this.onResetGame,\n    };\n    return (\n      <Modal {...modalProps}>\n        {this.content}\n      </Modal>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Context } from \"../Aplication/context\";\nimport cookie from 'react-cookies';\nimport CardWrapper from \"../CardWrapper\";\n\nexport default class ScoreCards extends PureComponent {\n  static contextType = Context;\n\n  render() {\n    const { score } = this.context;\n    return (\n      <div className=\"app-score-cards\">\n        <CardWrapper title=\"Mejor puntaje\" iconType=\"crown\" text={cookie.load('best_score') || \"-\"} />\n        <CardWrapper title=\"Puntaje partida\" iconType=\"caret-right\" text={score.points} />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport cookie from 'react-cookies';\nimport { initialState, Context } from \"./context\";\nimport PageTitle from \"../PageTitle\";\nimport ActionsBar from \"../ActionsBar\";\nimport Game from \"../Game\";\nimport Onboarding from \"../Onboarding\";\nimport ScoreModal from \"../ScoreModal\";\nimport ScoreCards from \"../ScoreCards\";\n\nimport './index.css';\n\nexport default class Aplication extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n    \n    const { initialGameStatus, initialGameScore, initialGameTimer } = initialState;\n\n    this.state = {\n      status: initialGameStatus,\n      score: initialGameScore,\n      timer: initialGameTimer,\n\n      lastId: null,\n      isKeyDown: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", (event) => {\n      let lastId;\n      switch (event.which) {\n        case 37: {\n          lastId = 'left';\n          break;\n        }\n        case 38: {\n          lastId = 'top';\n          break;\n        }\n        case 39: {\n          lastId = 'right';\n          break;\n        }\n        case 40: {\n          lastId = 'bottom';\n          break;\n        }      \n        default:\n          return null;\n      }\n      this.setState({\n        lastId,\n        isKeyDown: true,\n      });\n    });\n\n    document.addEventListener(\"keyup\", () => {\n      this.setState((state) => ({\n        score: {\n          ...state.score,\n          allCount: state.status.run ? state.score.allCount + 1 : state.score.allCount,\n        },\n        isKeyDown: false,\n      }));\n    });\n  }\n\n  resetTimer() {\n    const { initialGameStatus, initialGameScore, initialGameTimer } = initialState;\n    const { score } = this.state;\n\n    if (score.points > cookie.load('best_score') || !cookie.load('best_score')) {\n      cookie.save('best_score', score.points);\n    }\n\n    clearInterval(this.timer);\n    this.setState({\n      status: initialGameStatus,\n      timer: initialGameTimer,\n      score: initialGameScore,\n      lastId: null,\n    })\n  }\n\n  startTimer() {\n    this.setState({\n      status: {\n        run: true,\n        ready: true,\n      },\n    })\n    \n    this.timer = setInterval(() => {\n      this.setState((state) => ({\n        timer: state.timer - 1,\n      }));\n    }, 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.setState({\n      status: {\n        run: false,\n        ready: false,\n      },\n      lastId: null,\n    })\n  }\n\n  updateScore(score) {\n    this.setState((state) => ({\n      score,\n      lastId: null,\n    }));\n  }\n  \n  render() {\n    const { status } = this.state;\n    const contextValue = {\n      ...this.state,\n      resetTimer: this.resetTimer,\n      startTimer: this.startTimer,\n      stopTimer: this.stopTimer,\n      updateScore: this.updateScore,\n    };\n    \n    return (\n      <Context.Provider value={contextValue}>\n        <div className=\"aplication\">\n          <PageTitle />\n          <ActionsBar />\n          <Game />\n          <ScoreCards />\n          <Onboarding />\n          <ScoreModal visible={!status.run && !status.ready} />\n        </div>\n      </Context.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Aplication from './components/Aplication';\n\nimport './index.css';\n\nReactDOM.render(\n  <Aplication />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}